{"ast":null,"code":"import _objectSpread from\"/home/sanyam/Documents/Projects/Fitness App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initState={loggedIn:false,trainings:[]};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;if(action.type==='FETCH_ALL_SCHEDULE'){// const updatedTrainings = [...state.trainings];\n// updatedTrainings.push(action.payload);\nreturn _objectSpread(_objectSpread({},state),{},{trainings:action.payload});}else if(action.type==='FETCH_SINGLE_SCHEDULE'){return _objectSpread(_objectSpread({},state),{},{singleTraining:action.payload});}else if(action.type==='LOGIN'){if(action.loginCred.username==='admin'&&action.loginCred.password==='pass'){return _objectSpread(_objectSpread({},state),{},{loggedIn:true});}else{return _objectSpread({},state);}}return state;}","map":{"version":3,"sources":["/home/sanyam/Documents/Projects/Fitness App/frontend/src/reducers/rootReducer.js"],"names":["initState","loggedIn","trainings","state","action","type","payload","singleTraining","loginCred","username","password"],"mappings":"0KAAA,GAAMA,CAAAA,SAAS,CAAG,CAAEC,QAAQ,CAAE,KAAZ,CAAmBC,SAAS,CAAE,EAA9B,CAAlB,CAEA,cAAe,WAAqC,IAA3BC,CAAAA,KAA2B,2DAAnBH,SAAmB,IAARI,CAAAA,MAAQ,2CAEhD,GAAIA,MAAM,CAACC,IAAP,GAAgB,oBAApB,CAA0C,CACtC;AACA;AACA,sCACOF,KADP,MAEID,SAAS,CAAEE,MAAM,CAACE,OAFtB,GAIH,CAPD,IAOO,IAAIF,MAAM,CAACC,IAAP,GAAgB,uBAApB,CAA6C,CAChD,sCACOF,KADP,MAEII,cAAc,CAAEH,MAAM,CAACE,OAF3B,GAIH,CALM,IAKA,IAAIF,MAAM,CAACC,IAAP,GAAgB,OAApB,CAA6B,CAEhC,GAAID,MAAM,CAACI,SAAP,CAAiBC,QAAjB,GAA8B,OAA9B,EAAyCL,MAAM,CAACI,SAAP,CAAiBE,QAAjB,GAA8B,MAA3E,CAAmF,CAC/E,sCACOP,KADP,MAEIF,QAAQ,CAAE,IAFd,GAIH,CALD,IAKO,CACH,wBAAYE,KAAZ,EACH,CAEJ,CAED,MAAOA,CAAAA,KAAP,CACH","sourcesContent":["const initState = { loggedIn: false, trainings: [] };\n\nexport default function (state = initState, action) {\n\n    if (action.type === 'FETCH_ALL_SCHEDULE') {\n        // const updatedTrainings = [...state.trainings];\n        // updatedTrainings.push(action.payload);\n        return {\n            ...state,\n            trainings: action.payload\n        }\n    } else if (action.type === 'FETCH_SINGLE_SCHEDULE') {\n        return {\n            ...state,\n            singleTraining: action.payload\n        }\n    } else if (action.type === 'LOGIN') {\n\n        if (action.loginCred.username === 'admin' && action.loginCred.password === 'pass') {\n            return {\n                ...state,\n                loggedIn: true\n            };\n        } else {\n            return { ...state };\n        }\n\n    }\n\n    return state;\n}"]},"metadata":{},"sourceType":"module"}